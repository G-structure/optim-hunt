{"table":[{"cells":{"fill":{"color":"#EBF0F8"},"heatmapgl":[{"type":"heatmapgl","bar":[{"error_x":{"color":"#2a3f5f"},"yaxis":{"backgroundcolor":"#E5ECF6","zerolinewidth":2},"3":<pre class="code-error">Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:00<00:02,  1.30it/s]Loading checkpoint shards:  50%|█████     | 2/4 [00:01<00:01,  1.31it/s]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:02<00:00,  1.33it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:02<00:00,  1.79it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:02<00:00,  1.58it/s]
Traceback (most recent call last):
  File "<string>", line 14, in <module>
  File "/home/freiza/optim_hunter/src/optim_hunter/experiments/logit_diff.py", line 56, in generate_logit_diff_hooked
    (linreg_tokens, linreg_logits, linreg_caches, linreg_data_store) = run_and_cache_model_linreg_tokens_batched(
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/src/optim_hunter/model_utils.py", line 448, in run_and_cache_model_linreg_tokens_batched
    batch_logits, batch_cache = model.run_with_cache(batch_tokens)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/transformer_lens/HookedTransformer.py", line 657, in run_with_cache
    out, cache_dict = super().run_with_cache(
                      ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/transformer_lens/hook_points.py", line 568, in run_with_cache
    model_out = self(*model_args, **model_kwargs)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/transformer_lens/HookedTransformer.py", line 575, in forward
    residual = block(
               ^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/transformer_lens/components/transformer_block.py", line 160, in forward
    self.attn(
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/freiza/optim_hunter/.venv/lib/python3.12/site-packages/transformer_lens/components/abstract_attention.py", line 260, in forward
    pattern = torch.where(torch.isnan(pattern), torch.zeros_like(pattern), pattern)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 202.00 MiB. GPU 0 has a total capacity of 23.68 GiB of which 2.94 MiB is free. Including non-PyTorch memory, this process has 23.67 GiB memory in use. Of the allocated memory 23.06 GiB is allocated by PyTorch, and 310.20 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
</pre>,"histogram2d":[{"type":"histogram2d","width":0.5},"solidity":0.2}},"showgrid":true,"pad":4,"parcoords":[{"type":"parcoords","scattergl":[{"type":"scattergl","xaxis":{"gridcolor":"white","mesh3d":[{"type":"mesh3d","staticPlot":false,"zeroline":false},"scatterpolar":[{"type":"scatterpolar","scattergeo":[{"type":"scattergeo","automargin":true,"zerolinecolor":"white","scattercarpet":[{"type":"scattercarpet","contourcarpet":[{"type":"contourcarpet","margin":{"b":50,"caxis":{"gridcolor":"white","minorgridcolor":"white","scatterpolargl":[{"type":"scatterpolargl","sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"x":0.5,"angularaxis":{"gridcolor":"white","showland":true,"mapbox":{"style":"light"}}}},                        {"displayModeBar": false,"responsive":true}                    )                };                            </script>        </div>
    </div>
    
<script>
(function() {
    function updatePlotTheme(plotDiv, isLight) {
        console.log('Updating plot theme for', plotDiv.id, 'isLight:',
            isLight);
        try {
            if (isLight) {
                Plotly.relayout(plotDiv, {
                    'plot_bgcolor': 'rgba(253,246,227,0)'
                    ,
                    'paper_bgcolor':
                        'rgba(253,246,227,0)',
                    'xaxis.gridcolor':
                        '#93a1a1',
                    'yaxis.gridcolor':
                        '#93a1a1',
                    'xaxis.color': '#073642',
                    'yaxis.color': '#073642',
                    'title.font.color':
                        '#073642',
                    'autosize': true
                });
                Plotly.restyle(plotDiv, {
                    'line.color': '#2075c7',
                    'marker.color': '#2075c7',
                    'marker.line.color':
                        'rgba(253,246,227,0)'
                });
            } else {
                Plotly.relayout(plotDiv, {
                    'plot_bgcolor': 'rgba(26,26,26,0)',
                    'paper_bgcolor':
                        'rgba(26,26,26,0)',
                    'xaxis.gridcolor': '#444',
                    'yaxis.gridcolor': '#444',
                    'xaxis.color': '#e0e0e0',
                    'yaxis.color': '#e0e0e0',
                    'title.font.color':
                        '#e0e0e0',
                    'autosize': true
                });
                Plotly.restyle(plotDiv, {
                    'line.color': '#9ec5fe',
                    'marker.color': '#9ec5fe',
                    'marker.line.color':
                        'rgba(26,26,26,0)'
                });
            }

            // Force a resize after theme update
            window.dispatchEvent(new Event('resize'));

        } catch (e) {
            console.error('Error updating plot theme:', e);
        }
    }

    // In template.html, modify the theme change handler
    function updateAllPlots() {
        // Debounce the update
        if (window.plotUpdateTimeout) {
            clearTimeout(window.plotUpdateTimeout);
        }

        window.plotUpdateTimeout = setTimeout(() => {
            const isLight = document.body.classList.contains('light-theme');
            const plots = document.querySelectorAll('.plotly-graph-div');

            // Update plots in batches
            const batchSize = 3;
            for (let i = 0; i < plots.length; i += batchSize) {
                setTimeout(() => {
                    const batch = Array.from(plots).slice(i, i + batchSize);
                    batch.forEach(plot => updatePlotTheme(plot, isLight));
                }, Math.floor(i/batchSize) * 100);
            }
        }, 250);
    }

    // Add resize handler with debouncing
    window.addEventListener('resize', function() {
        if (window.resizeTimeout) {
            clearTimeout(window.resizeTimeout);
        }
        window.resizeTimeout = setTimeout(function() {
            document.querySelectorAll('.plotly-graph-div')
                .forEach(function(plot) {
                    Plotly.Plots.resize(plot);
                });
        }, 250);
    });

    // Wait for Plotly to be fully loaded
    function ensurePlotly() {
        if (window.Plotly) {
            console.log('Plotly loaded, setting up theme handling');
            // Initial theme setup
            updateAllPlots();

            // Listen for theme changes
            document.body.addEventListener('themeChanged', function(e) {
                console.log('Theme changed event received');
                updateAllPlots();
            });

            // Initial resize to ensure proper dimensions
            window.dispatchEvent(new Event('resize'));
        } else {
            console.log('Waiting for Plotly...');
            setTimeout(ensurePlotly, 100);
        }
    }

    // Start checking for Plotly
    ensurePlotly();
})();
</script>
    </div>
</pre>,"landcolor":"#E5ECF6","linecolor":"white","xanchor":"center"},"showlakes":true,"baxis":{"gridcolor":"white","arrowwidth":1},"gridcolor":"white","heatmap":[{"type":"heatmap","scatter":[{"fillpattern":{"fillmode":"overlay","geo":{"bgcolor":"white","surface":[{"type":"surface","histogram":[{"marker":{"pattern":{"fillmode":"overlay","colorbar":{"outlinewidth":0,"ternary":{"bgcolor":"#E5ECF6","scatter3d":[{"type":"scatter3d","carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","text":"Average MSE Across Methods (Low MSE Seeds: [2, 3, 4, 5, 8, 9, 12, 13, 14, 16, 21, 27, 28, 31, 32, 37, 40, 45, 46, 47, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 88, 91, 95])","pie":[{"automargin":true,"layout":{"autotypenumbers":"strict","scattermapbox":[{"type":"scattermapbox","plot_bgcolor":"#E5ECF6","shapedefaults":{"line":{"color":"#2a3f5f"}},"lakecolor":"white"},"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"font":{"color":"#2a3f5f"},"startlinecolor":"#2a3f5f"},"aaxis":{"gridcolor":"white","polar":{"bgcolor":"#E5ECF6","t":50},"subunitcolor":"white","line":{"color":"white"}},"radialaxis":{"gridcolor":"white","ticks":"","contour":[{"type":"contour","title":{"x":0.05},"pattern":{"fillmode":"overlay","type":"pie"}]},"r":20,"y":[3290570.2131014974,1957814.8657511862,299784.8489557912,1296516.0509062754,114728.95762441652,216858.09263347366,1274680.3727167847,345557.8949677186,444295.7007385654,275250.6095303904,28137.1065904604,253793.56965337615,3509653.4907369385,1274680.3727167847,198559.72882160457,389691.84096326114,1729258.7018048705,5553.1668484410775,374476.6212972608,599857.66214936,1961112.8878198871,1969177.2151240006,388558.6067263242,402979.03786376794,1398652.491326785],"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","error_y":{"color":"#2a3f5f"},"zaxis":{"backgroundcolor":"#E5ECF6","annotationdefaults":{"arrowcolor":"#2a3f5f","l":50,"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"showbackground":true,"size":10,"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"coloraxis":{"colorbar":{"outlinewidth":0,"hoverlabel":{"align":"left"},"barpolar":[{"marker":{"line":{"color":"#E5ECF6","2":<pre class="code-output">Loaded pretrained model meta-llama/Meta-Llama-3-8B-Instruct into HookedTransformer
<div id="mse-comparison" class="identified-content">
    <div class="plot-container">
        <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
        <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.35.2.min.js"></script>                <div id="338d7deb-7e36-4ba2-861e-87d10b5d537f" class="plotly-graph-div" style="height:100%; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("338d7deb-7e36-4ba2-861e-87d10b5d537f")) {                    Plotly.newPlot(                        "338d7deb-7e36-4ba2-861e-87d10b5d537f",                        [{"hovertemplate":"Method: %{x}\u003cbr\u003eMean Squared Error: %{y:.3f}\u003cextra\u003e\u003c\u002fextra\u003e","marker":{"color":"#9ec5fe","line":{"color":"#1a1a1a","width":1}},"x":["bayesian_regression","mlp_uat_1","svm","adaboost","knn","knn_v2","LLaMA-7B","knn_v4","average","mlp_deep1","ridge","mlp_deep3","last","mlp_uat_3","gradient_boosting","mlp_uat_2","bagging","lasso","mlp_deep2","kernel_ridge","random_forest","knn_v5_adaptable","svm_w_s","knn_v3","random"],"y":[27759.761335639316,307008.482630887,1950265.9465967112,187148.10176538353,1219016.976473374,1229394.8126652662,654187.627978576,1998954.7469277105,1697294.7350919829,11107691.475915365,392099.7594122926,470300.4078762707,3641098.318343177,377489.62612308294,108693.34247797879,377114.9539320453,195976.04806982598,391663.78093143983,319249.1022744629,605975.8930315666,238750.94508137964,1229394.8126652662,1954042.6828613763,1374829.099285558,3299958.60905958],"type":"bar"}],                        {"autosize":true,"hoverlabel":{"bgcolor":"#333","font":{"family":"monospace","size":12}},"margin":{"b":50,"l":50,"pad":4,"r":20,"t":50},"paper_bgcolor":"rgba(26,26,26,0)","plot_bgcolor":"rgba(26,26,26,0)","title":{"font":{"color":"#e0e0e0","size":14},"text":"Average MSE Across Methods","x":0.5,"xanchor":"center"},"xaxis":{"color":"#e0e0e0","gridcolor":"#444","showgrid":true,"title":{"text":"Method"},"zeroline":false},"yaxis":{"color":"#e0e0e0","gridcolor":"#444","showgrid":true,"title":{"text":"Mean Squared Error"},"zeroline":false},"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}}},                        {"displayModeBar": false, "staticPlot": false, "responsive": true}                    )                };                            </script>        </div>
    </div>
    
<script>
(function() {
    function updatePlotTheme(plotDiv, isLight) {
        console.log('Updating plot theme for', plotDiv.id, 'isLight:',
            isLight);
        try {
            if (isLight) {
                Plotly.relayout(plotDiv, {
                    'plot_bgcolor': 'rgba(253,246,227,0)'
                    ,
                    'paper_bgcolor':
                        'rgba(253,246,227,0)',
                    'xaxis.gridcolor':
                        '#93a1a1',
                    'yaxis.gridcolor':
                        '#93a1a1',
                    'xaxis.color': '#073642',
                    'yaxis.color': '#073642',
                    'title.font.color':
                        '#073642',
                    'autosize': true
                });
                Plotly.restyle(plotDiv, {
                    'line.color': '#2075c7',
                    'marker.color': '#2075c7',
                    'marker.line.color':
                        'rgba(253,246,227,0)'
                });
            } else {
                Plotly.relayout(plotDiv, {
                    'plot_bgcolor': 'rgba(26,26,26,0)',
                    'paper_bgcolor':
                        'rgba(26,26,26,0)',
                    'xaxis.gridcolor': '#444',
                    'yaxis.gridcolor': '#444',
                    'xaxis.color': '#e0e0e0',
                    'yaxis.color': '#e0e0e0',
                    'title.font.color':
                        '#e0e0e0',
                    'autosize': true
                });
                Plotly.restyle(plotDiv, {
                    'line.color': '#9ec5fe',
                    'marker.color': '#9ec5fe',
                    'marker.line.color':
                        'rgba(26,26,26,0)'
                });
            }

            // Force a resize after theme update
            window.dispatchEvent(new Event('resize'));

        } catch (e) {
            console.error('Error updating plot theme:', e);
        }
    }

    // In template.html, modify the theme change handler
    function updateAllPlots() {
        // Debounce the update
        if (window.plotUpdateTimeout) {
            clearTimeout(window.plotUpdateTimeout);
        }

        window.plotUpdateTimeout = setTimeout(() => {
            const isLight = document.body.classList.contains('light-theme');
            const plots = document.querySelectorAll('.plotly-graph-div');

            // Update plots in batches
            const batchSize = 3;
            for (let i = 0; i < plots.length; i += batchSize) {
                setTimeout(() => {
                    const batch = Array.from(plots).slice(i, i + batchSize);
                    batch.forEach(plot => updatePlotTheme(plot, isLight));
                }, Math.floor(i/batchSize) * 100);
            }
        }, 250);
    }

    // Add resize handler with debouncing
    window.addEventListener('resize', function() {
        if (window.resizeTimeout) {
            clearTimeout(window.resizeTimeout);
        }
        window.resizeTimeout = setTimeout(function() {
            document.querySelectorAll('.plotly-graph-div')
                .forEach(function(plot) {
                    Plotly.Plots.resize(plot);
                });
        }, 250);
    });

    // Wait for Plotly to be fully loaded
    function ensurePlotly() {
        if (window.Plotly) {
            console.log('Plotly loaded, setting up theme handling');
            // Initial theme setup
            updateAllPlots();

            // Listen for theme changes
            document.body.addEventListener('themeChanged', function(e) {
                console.log('Theme changed event received');
                updateAllPlots();
            });

            // Initial resize to ensure proper dimensions
            window.dispatchEvent(new Event('resize'));
        } else {
            console.log('Waiting for Plotly...');
            setTimeout(ensurePlotly, 100);
        }
    }

    // Start checking for Plotly
    ensurePlotly();
})();
</script>
    </div> 
 Seeds with LLM MSE < 30,000: [2, 3, 4, 5, 8, 9, 12, 13, 14, 16, 21, 27, 28, 31, 32, 37, 40, 45, 46, 47, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 88, 91, 95] 
 <div id="low-mse-comparison" class="identified-content">
    <div class="plot-container">
        <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
        <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.35.2.min.js"></script>                <div id="e9678c15-7d1f-4617-8940-764e21a591c7" class="plotly-graph-div" style="height:100%; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("e9678c15-7d1f-4617-8940-764e21a591c7")) {                    Plotly.newPlot(                        "e9678c15-7d1f-4617-8940-764e21a591c7",                        [{"hovertemplate":"Method: %{x}\u003cbr\u003eMean Squared Error: %{y:.3f}\u003cextra\u003e\u003c\u002fextra\u003e","marker":{"color":"#9ec5fe","line":{"color":"#1a1a1a","width":1}},"x":["bayesian_regression","mlp_uat_1","svm","adaboost","knn","knn_v2","LLaMA-7B","knn_v4","average","mlp_deep1","ridge","mlp_deep3","last","mlp_uat_3","gradient_boosting","mlp_uat_2","bagging","lasso","mlp_deep2","kernel_ridge","random_forest","knn_v5_adaptable","svm_w_s","knn_v3","random"],"y":[28137.1065904604,374476.6212972608,1957814.8657511862,198559.72882160457,1296516.0509062754,1274680.3727167847,5553.1668484410775,1969177.2151240006,1729258.7018048705,275250.6095303904,389691.84096326114,444295.7007385654,3509653.4907369385,402979.03786376794,114728.95762441652,345557.8949677186,216858.09263347366,388558.6067263242,299784.8489557912,599857.66214936,253793.56965337615,1274680.3727167847,1961112.8878198871,1398652.491326785,3290570.2131014974],"type":"bar"}],                        {"autosize":true,"hoverlabel":{"bgcolor":"#333","font":{"family":"monospace","size":12}},"margin":{"b":50,"l":50,"pad":4,"r":20,"t":50},"paper_bgcolor":"rgba(26,26,26,0)","plot_bgcolor":"rgba(26,26,26,0)","title":{"font":{"color":"#e0e0e0","size":14},"text":"Average MSE Across Methods (Low MSE Seeds: [2, 3, 4, 5, 8, 9, 12, 13, 14, 16, 21, 27, 28, 31, 32, 37, 40, 45, 46, 47, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 88, 91, 95])","x":0.5,"xanchor":"center"},"xaxis":{"color":"#e0e0e0","gridcolor":"#444","showgrid":true,"title":{"text":"Method"},"zeroline":false},"yaxis":{"color":"#e0e0e0","gridcolor":"#444","showgrid":true,"title":{"text":"Mean Squared Error"},"zeroline":false},"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}}},                        {"displayModeBar": false, "staticPlot": false, "responsive": true}                    )                };                            </script>        </div>
    </div>
    
<script>
(function() {
    function updatePlotTheme(plotDiv, isLight) {
        console.log('Updating plot theme for', plotDiv.id, 'isLight:',
            isLight);
        try {
            if (isLight) {
                Plotly.relayout(plotDiv, {
                    'plot_bgcolor': 'rgba(253,246,227,0)'
                    ,
                    'paper_bgcolor':
                        'rgba(253,246,227,0)',
                    'xaxis.gridcolor':
                        '#93a1a1',
                    'yaxis.gridcolor':
                        '#93a1a1',
                    'xaxis.color': '#073642',
                    'yaxis.color': '#073642',
                    'title.font.color':
                        '#073642',
                    'autosize': true
                });
                Plotly.restyle(plotDiv, {
                    'line.color': '#2075c7',
                    'marker.color': '#2075c7',
                    'marker.line.color':
                        'rgba(253,246,227,0)'
                });
            } else {
                Plotly.relayout(plotDiv, {
                    'plot_bgcolor': 'rgba(26,26,26,0)',
                    'paper_bgcolor':
                        'rgba(26,26,26,0)',
                    'xaxis.gridcolor': '#444',
                    'yaxis.gridcolor': '#444',
                    'xaxis.color': '#e0e0e0',
                    'yaxis.color': '#e0e0e0',
                    'title.font.color':
                        '#e0e0e0',
                    'autosize': true
                });
                Plotly.restyle(plotDiv, {
                    'line.color': '#9ec5fe',
                    'marker.color': '#9ec5fe',
                    'marker.line.color':
                        'rgba(26,26,26,0)'
                });
            }

            // Force a resize after theme update
            window.dispatchEvent(new Event('resize'));

        } catch (e) {
            console.error('Error updating plot theme:', e);
        }
    }

    // In template.html, modify the theme change handler
    function updateAllPlots() {
        // Debounce the update
        if (window.plotUpdateTimeout) {
            clearTimeout(window.plotUpdateTimeout);
        }

        window.plotUpdateTimeout = setTimeout(() => {
            const isLight = document.body.classList.contains('light-theme');
            const plots = document.querySelectorAll('.plotly-graph-div');

            // Update plots in batches
            const batchSize = 3;
            for (let i = 0; i < plots.length; i += batchSize) {
                setTimeout(() => {
                    const batch = Array.from(plots).slice(i, i + batchSize);
                    batch.forEach(plot => updatePlotTheme(plot, isLight));
                }, Math.floor(i/batchSize) * 100);
            }
        }, 250);
    }

    // Add resize handler with debouncing
    window.addEventListener('resize', function() {
        if (window.resizeTimeout) {
            clearTimeout(window.resizeTimeout);
        }
        window.resizeTimeout = setTimeout(function() {
            document.querySelectorAll('.plotly-graph-div')
                .forEach(function(plot) {
                    Plotly.Plots.resize(plot);
                });
        }, 250);
    });

    // Wait for Plotly to be fully loaded
    function ensurePlotly() {
        if (window.Plotly) {
            console.log('Plotly loaded, setting up theme handling');
            // Initial theme setup
            updateAllPlots();

            // Listen for theme changes
            document.body.addEventListener('themeChanged', function(e) {
                console.log('Theme changed event received');
                updateAllPlots();
            });

            // Initial resize to ensure proper dimensions
            window.dispatchEvent(new Event('resize'));
        } else {
            console.log('Waiting for Plotly...');
            setTimeout(ensurePlotly, 100);
        }
    }

    // Start checking for Plotly
    ensurePlotly();
})();
</script>
    </div>
</pre>,"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"gridwidth":2}},"arrowhead":0,"header":{"fill":{"color":"#C8D4E3"},"paper_bgcolor":"white","scene":{"xaxis":{"backgroundcolor":"#E5ECF6","choropleth":[{"type":"choropleth","hovermode":"closest"}